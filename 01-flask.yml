---
- name: Provision and Configure Flask Web App
  hosts: n1
  become: yes

  vars:
    flask_app_directory: /home/centos/jenkins-ansible-flask-1
    flask_app_repo: https://github.com/kesienaf/jenkins-ansible-flask-1.git

  tasks:
    - name: Update package cache
      yum:
        name: '*'
        state: latest

    - name: Install EPEL repository
      yum:
        name: epel-release
        state: present

    - name: Install required packages
      yum:
        name:
          - python3-devel
          - python3-pip
          - httpd
          - git
          - gcc
          - nginx
          - supervisor
        state: present

    - name: Clone Flask app repository
      git:
        repo: https://github.com/kesienaf/jenkins-ansible-flask-1.git
        dest: "{{ flask_app_directory }}"
        version: main
      environment:
        GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'

    - name: Install pip using get_pip.py
      command: "python3 -m ensurepip"
      args:
        chdir: "{{ flask_app_directory }}"
      environment:
        PATH: "{{ flask_app_directory }}/venv/bin:{{ ansible_env.PATH }}"

    - name: Upgrade pip
      command: "python3 -m pip install --upgrade pip"
      args:
        chdir: "{{ flask_app_directory }}"
      environment:
        PATH: "{{ flask_app_directory }}/venv/bin:{{ ansible_env.PATH }}"

    - name: Install virtualenv
      pip:
        name: virtualenv
        executable: pip3
        state: present

    - name: Create virtual environment
      command: python3 -m venv venv
      args:
        chdir: "{{ flask_app_directory }}"
      environment:
        PATH: "{{ flask_app_directory }}/venv/bin:{{ ansible_env.PATH }}"

    - name: Activate virtual environment
      command: "/bin/bash -c 'source {{ flask_app_directory }}/venv/bin/activate'"
      become: yes

    - name: Install Flask dependencies
      pip:
        requirements: "{{ flask_app_directory }}/requirements.txt"
        virtualenv: "{{ flask_app_directory }}/venv"

    - name: Install Flask
      pip:
        name: Flask
        executable: pip3
        state: present

    - name: Configure Firewall
      firewalld:
        service: httpd
        permanent: yes
        state: enabled
      notify:
        - restart firewalld

    - name: Configure Nginx
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/flask_app
      notify:
        - Reload Nginx

    - name: Create symbolic link for Nginx configuration
      file:
        src: /etc/nginx/sites-available/flask_app
        dest: /etc/nginx/sites-enabled/flask_app
        state: link
      notify:
        - Reload Nginx

    - name: Start Nginx service
      service:
        name: nginx
        state: started

    - name: Configure Supervisor
      template:
        src: supervisor.conf.j2
        dest: /etc/supervisor/conf.d/flask_app.conf
      notify:
        - Restart Supervisor

    - name: Configure and start Flask web app
      command: gunicorn your_app:app
      args:
        chdir: "{{ flask_app_directory }}"
        virtualenv: "{{ flask_app_directory }}/venv"
        stdout_logfile: /var/log/gunicorn.log
        stderr_logfile: /var/log/gunicorn.log
      notify:
        - restart gunicorn

  handlers:
    - name: restart firewalld
      service:
        name: firewalld
        state: restarted

    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: restart gunicorn
      service:
        name: gunicorn
        state: restarted
...